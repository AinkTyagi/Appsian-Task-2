name: Continuous Integration

on:
  push:
    branches-ignore: [ main, production ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-test-backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
      
      - name: Restore dependencies
        working-directory: ./server
        run: dotnet restore
      
      - name: Build
        working-directory: ./server
        run: dotnet build --no-restore --configuration Release
      
      - name: Run tests with coverage
        working-directory: ./server/ProjectManager.Tests
        run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      
      - name: Check build warnings
        working-directory: ./server
        run: dotnet build --no-restore --warnaserror

  lint-and-test-frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      
      - name: Install dependencies
        working-directory: ./web
        run: npm ci
      
      - name: Lint code
        working-directory: ./web
        run: npm run lint || echo "No lint script found, skipping..."
        continue-on-error: true
      
      - name: Type check
        working-directory: ./web
        run: npx tsc --noEmit
      
      - name: Run tests
        working-directory: ./web
        run: npm run test -- --run
      
      - name: Build
        working-directory: ./web
        run: npm run build
        env:
          VITE_API_BASE_URL: http://localhost:5000
      
      - name: Check bundle size
        working-directory: ./web
        run: |
          echo "ðŸ“¦ Build Output:"
          ls -lh dist/
          du -sh dist/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true

  pr-comment:
    name: PR Comment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [lint-and-test-backend, lint-and-test-frontend]
    
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const body = `## âœ… CI Checks Passed
            
            All tests and builds completed successfully!
            
            - âœ… Backend tests passed
            - âœ… Frontend tests passed
            - âœ… Build successful
            
            Ready for review! ðŸš€`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
